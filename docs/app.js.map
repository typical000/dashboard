{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/ErrorNotice.js","webpack:///./src/components/Loader.js","webpack:///./src/components/Section.js","webpack:///./src/containers/App.js","webpack:///./src/containers/CountriesByContinent.js","webpack:///./src/containers/Dashboard.js","webpack:///./src/containers/EditExistingCountry.js","webpack:///./src/containers/GraphQLProvider.js","webpack:///./src/containers/QueryDeduplication.js","webpack:///./src/containers/RestAPI.js","webpack:///./src/graphql/countryByContinent.gql","webpack:///./src/graphql/fragments/country.gql","webpack:///./src/graphql/usersQuery.gql","webpack:///./src/index.js","webpack:///./src/theme/index.js","webpack:///./src/utils/NormalizeCss.js","webpack:///./util.inspect (ignored)"],"names":["useStyles","theme","container","padding","borderRadius","common","radius","textAlign","border","danger","background","title","color","fontSize","margin","text","display","ErrorNotice","error","css","loader","active","position","content","top","right","bottom","left","zIndex","opacity","card","width","height","marginTop","marginLeft","borderTopColor","foreground","willChange","animation","name","duration","iterationCount","timingFunction","from","transform","to","Loader","children","className","section","boxShadow","shadow","level1","Section","classes","App","CountriesByContinent","continent","setContinent","force","setForce","COUNTRY_BY_CONTINENT_QUERY","variables","code","fetchPolicy","data","loading","e","preventDefault","target","elements","value","checked","countries","map","emoji","capital","Dashboard","EditExistingCountry","client","fragment","id","COUNTRY_FRAGMENT","readFragment","console","writeFragment","ApolloClient","link","ApolloLink","RestLink","uri","BatchHttpLink","cache","InMemoryCache","dataIdFromObject","object","__typename","connectToDevTools","addTypeName","GraphQLProvider","QueryDeduplication","handleDeduplicationClick","query","gql","firstData","log","language","secondData","handleNoDeduplicationClick","RestAPI","USERS_QUERY","handleSubmit","newResults","users","results","push","first","last","login","uuid","writeQuery","document","getElementById","base","brand","light","dark","success","typography","fontFamily","lineHeight","widget","icon","default","inverse","highlight","muted","level2","level3","level4","level5","button","hoverBackground","normalize"],"mappings":"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AAGnF;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;ACxHA,eAAe,kCAAkC,oCAAoC,gCAAgC,kBAAkB,2BAA2B,iCAAiC,iCAAiC,qCAAqC,uBAAuB,6BAA6B,gCAAgC,EAAE,uBAAuB,8BAA8B,gCAAgC,EAAE,uBAAuB,gCAAgC,gCAAgC,GAAG,SAAS;AACzhB,sBAAsB,qCAAqC,+BAA+B,+CAA+C;;;AAGzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AA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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react';\nimport {createUseStyles} from 'react-jss'\nimport {lighten} from 'polished';\n\nconst useStyles = createUseStyles((theme) => ({\n  container: {\n    padding: 20,\n    borderRadius: theme.common.radius,\n    textAlign: 'center',\n    border: [1, 'solid', theme.danger],\n    background: lighten(0.4, theme.danger),\n  },\n  title: {\n    color: theme.danger,\n    fontSize: 24,\n    margin: [0, 0, 20],\n  },\n  text: {\n    color: theme.danger,\n    fontSize: 14,\n    margin: [0, 0, 10],\n    '&:empty': {\n      display: 'none',\n    },\n  },\n}));\n\nconst ErrorNotice = ({error}) => {\n  const css = useStyles();\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Something went wrong</h2>\n      <p className={css.text}>\n        Please, try again later. Maybe this will help you:\n      </p>\n      <p className={css.text}>{JSON.stringify(error)}</p>\n    </div>\n  );\n}\n\nexport default ErrorNotice;\n","import React from 'react';\nimport cn from 'classnames';\nimport {rotateZ} from 'css-functions';\nimport {createUseStyles} from 'react-jss'\n\n/**\n * Just a loader UI component.\n * In real app it must be placed in some separated\n * package (or yarn workspace) with all other UI components.\n */\nconst useStyles = createUseStyles((theme) => ({\n  loader: {\n    borderRadius: 'inherit',\n  },\n  active: {\n    '&::before, &::after': {\n      position: 'absolute',\n      content: '\"\"',\n    },\n    '&::before': {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      zIndex: 100,\n      opacity: 0.8,\n      background: theme.common.card,\n    },\n    '&::after': {\n      zIndex: 101,\n      width: 60,\n      height: 60,\n      top: '50%',\n      left: '50%',\n      marginTop: -30,\n      marginLeft: -30,\n      border: [4, 'solid', theme.loader.background],\n      borderTopColor: theme.loader.foreground,\n      borderRadius: '50%',\n      willChange: 'transform',\n      animation: {\n        name: 'spin',\n        duration: 1000,\n        iterationCount: 'infinite',\n        timingFunction: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)',\n      },\n    },\n  },\n\n  '@keyframes spin': {\n    from: {\n      transform: rotateZ(0),\n    },\n    to: {\n      transform: rotateZ(360),\n    },\n  },\n}));\n\nconst Loader = ({children, className, active}) => {\n  const css = useStyles();\n  return (\n    <div className={cn(css.loader, active && css.active, className)}>\n      {children}\n    </div>\n  );\n}\n\nexport default Loader;\n","import React from 'react';\nimport {createUseStyles} from 'react-jss'\n\nconst useStyles = createUseStyles((theme) => {\n  return (\n    {\n      section: {\n        boxShadow: theme.shadow.level1,\n        background: theme.common.card,\n        borderRadius: theme.common.radius,\n        margin: 20,\n        padding: 20,\n        position: 'relative',\n      }\n    }\n  )\n});\n\nconst Section = ({children}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.section}>\n      {children}\n    </div>\n  );\n}\n\nexport default Section;\n","import React from 'react';\nimport {ThemeProvider, JssProvider} from 'react-jss';\nimport GraphQLProvider from './GraphQLProvider';\nimport NormalizeCss from '../utils/NormalizeCss';\nimport theme from '../theme';\nimport Dashboard from './Dashboard';\n\n/**\n * Main application setup. All providers and other global\n * stuff goes here.\n */\nconst App = () => (\n  <GraphQLProvider>\n    <ThemeProvider theme={theme}>\n      <JssProvider>\n        <NormalizeCss>\n          <Dashboard />\n        </NormalizeCss>\n      </JssProvider>\n    </ThemeProvider>\n  </GraphQLProvider>\n);\n\nexport default App;\n","import React, {Fragment, useState} from 'react';\nimport {useQuery} from \"@apollo/client/react/hooks\";\nimport COUNTRY_BY_CONTINENT_QUERY from \"../graphql/countryByContinent.gql\";\nimport ErrorNotice from \"../components/ErrorNotice\";\nimport Loader from \"../components/Loader\";\n\n/**\n * Illustration how queries work.\n * - Each query is saved in Apollo Cache (unless you specify 'no-cache' fetch policy).\n * - You can force to fetch new data from the back-end via fetch policy property.\n */\nconst CountriesByContinent = () => {\n  const [continent, setContinent] = useState('EU');\n  const [force, setForce] = useState(false);\n\n  const {data, loading, error} = useQuery(COUNTRY_BY_CONTINENT_QUERY, {\n    variables: {\n      code: continent,\n    },\n    fetchPolicy: force ? 'network-only' : 'cache-first',\n  });\n\n  if (error) return <ErrorNotice error={error} />;\n\n  return (\n    <Loader active={loading}>\n      <h4>Loading data (w/o forcing network requests) & Caching</h4>\n      <form\n        onSubmit={(e) => {\n        e.preventDefault();\n        setContinent(e.target.elements.continent.value);\n        setForce(e.target.elements.force.checked);\n      }}\n      >\n        <input type=\"text\" placeholder=\"Continent (EU, AS, NA, etc.)\" name=\"continent\" defaultValue=\"EU\" />\n        {' '}\n        <button type=\"submit\">Load countries</button>\n        <br />\n        <input type=\"checkbox\" name=\"force\" id=\"force\" />\n        {' '}\n        <label htmlFor=\"force\">Force network request</label>\n      </form>\n      {data && data.continent && (\n        <Fragment>\n          <h2>{`${data.continent.name} (${data.continent.code})`}</h2>\n          {data.continent.countries.map(({emoji, code, capital}) => (\n            <div key={code}>{`${emoji} (${code}) - ${capital}`}</div>\n          ))}\n        </Fragment>\n      )}\n    </Loader>\n  )\n};\n\nexport default CountriesByContinent;\n","import React, {Fragment} from 'react';\n\nimport CountriesByContinent from \"./CountriesByContinent\";\nimport EditExistingCountry from \"./EditExistingCountry\";\nimport RestAPI from \"./RestAPI\";\nimport QueryDeduplication from './QueryDeduplication';\nimport Section from \"../components/Section\";\n\nconst Dashboard = () => (\n  <Fragment>\n    <Section>\n      <CountriesByContinent />\n    </Section>\n    <Section>\n      <EditExistingCountry />\n    </Section>\n    <Section>\n      <QueryDeduplication />\n    </Section>\n    <Section>\n      <RestAPI />\n    </Section>\n  </Fragment>\n)\n\nexport default Dashboard;\n","import React, {Fragment} from 'react';\nimport {useApolloClient} from \"@apollo/client/react/hooks\";\nimport COUNTRY_FRAGMENT from '../graphql/fragments/country.gql';\n\n/**\n * Illustation how to work with fragments and modify parts of existing data\n * using 'readFragment' and 'writeFragment'.\n */\nconst EditExistingCountry = () => {\n  const client = useApolloClient();\n\n  return (\n    <Fragment>\n      <h4>Modifying cache with Fragments</h4>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          const fragment = {\n            id: `Country:${e.target.elements.code.value}`,\n            fragment: COUNTRY_FRAGMENT,\n          }\n\n          const data = client.readFragment(fragment);\n\n          if (!data) {\n            console.error('No country found! :(')\n          }\n\n          client.writeFragment({\n            ...fragment,\n            data: {\n              ...data,\n              capital: e.target.elements.capital.value\n            }\n          })\n        }}\n      >\n        <input type=\"text\" placeholder=\"Enter Country Code\" name=\"code\" />\n        {' '}\n        <input type=\"text\" placeholder=\"Set a new capital\" name=\"capital\" />\n        {' '}\n        <button type=\"submit\">Overwrite</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default EditExistingCountry;\n","import React from 'react';\nimport {ApolloClient, ApolloLink} from '@apollo/client/core'\nimport {InMemoryCache, defaultDataIdFromObject} from '@apollo/client/cache';\nimport {ApolloProvider} from '@apollo/client/react';\nimport {BatchHttpLink} from '@apollo/client/link/batch-http';\nimport {RestLink} from 'apollo-link-rest';\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([\n    new RestLink({\n      uri: 'https://randomuser.me/api/',\n    }),\n    new BatchHttpLink({\n      uri: 'https://countries.trevorblades.com/graphql',\n    })\n  ]),\n  cache: new InMemoryCache({\n    dataIdFromObject: (object) => {\n      const id = object.code || object.id;\n      if (id) {\n        return `${object.__typename}:${id}`;\n      }\n      return defaultDataIdFromObject(object)\n    }\n  }),\n\n  /**\n   * Because it is an experiment we use hardcoded value\n   * In working example we'll use 'process.env'\n   */\n  connectToDevTools: true,\n  addTypeName: true,\n});\n\nconst GraphQLProvider = ({children}) => (\n  <ApolloProvider client={client}>{children}</ApolloProvider>\n);\n\nexport default GraphQLProvider;\n","import React, {Fragment} from 'react';\nimport {gql} from '@apollo/client/core';\nimport {useApolloClient} from '@apollo/client/react/hooks';\n\nconst QueryDeduplication = () => {\n  const client = useApolloClient();\n\n  const handleDeduplicationClick = async () => {\n    /**\n     * Illustation another way how we can consume GQL queries without\n     * creating *.gql files. But, personally, I don't like this approach since:\n     * - Instead of compiling queries in runtime they are executed\n     * - Mixing everything in JS is not for me\n     * The only case to use this in JS is when you need to create a truly dynamic query\n     * with different fields.\n     */\n    const firstData = await client.query({\n      query: gql`\n        query DeduplicatedQuery {\n          language(code: \"en\") {\n            name\n            code\n          }\n        }\n      `,\n    })\n\n    console.log(firstData.data.language);\n\n    // This query is a subset of the DeduplicatedQuery\n    const secondData = await client.query({\n      query: gql`\n        query SubsetDeduplicatedQuery {\n          language(code: \"en\") {\n            code\n          }\n        }\n      `,\n    })\n\n    console.log(secondData.data.language);\n  }\n\n  const handleNoDeduplicationClick = async () => {\n    /**\n     * When two different queries have a common part but differ at least\n     * in one field - both requests will be sent to the server.\n     * So be careful, especially with large queries - you can force the\n     * back-end to make additional calculations without reason.\n     */\n    await client.query({\n      query: gql`\n        query DeduplicatedQuery {\n          language(code: \"en\") {\n            code\n            native\n          }\n        }\n      `,\n    })\n\n    await client.query({\n      query: gql`\n        query DeduplicatedQuery {\n          language(code: \"en\") {\n            code\n            rtl\n          }\n        }\n      `,\n    })\n  }\n\n  return (\n    <Fragment>\n      <h4>Query Deduplication</h4>\n      <button onClick={handleDeduplicationClick}>Test query deduplication</button>\n      {' '}\n      <button onClick={handleNoDeduplicationClick}>Test non deduping queries</button>\n    </Fragment>\n  )\n};\n\nexport default QueryDeduplication;\n","import React, {Fragment, useCallback} from 'react';\nimport {useQuery} from \"@apollo/client/react/hooks\";\nimport USERS_QUERY from \"../graphql/usersQuery.gql\";\nimport Loader from \"../components/Loader\";\n\n/**\n * Example how to use REST API inside Apollo Client (if needed).\n * Also, an example how to modify data in cache but using another approach\n * with \"readQuery\" and \"writeQuery\".\n */\nconst RestAPI = () => {\n  const {data, loading, client} = useQuery(USERS_QUERY);\n\n  const handleSubmit = useCallback((e) => {\n    e.preventDefault();\n\n    const newResults = [...data.users.results];\n\n    // Create a new entry\n    newResults.push(\n      {\n        ...newResults[0],\n        name: {\n          ...newResults[0].name,\n          title: 'N/A',\n          first: 'N/A',\n          last: 'N/A',\n        },\n        login: {\n          ...newResults[0].login,\n          uuid: e.target.elements.uuid.value\n        }\n      }\n    )\n\n    client.writeQuery({\n      query: USERS_QUERY,\n      data: {\n        ...data,\n        users: {\n          ...data.users,\n          results: newResults,\n        }\n      }\n    })\n  }, [data]);\n\n  return (\n    <Fragment>\n      <Loader active={loading}>\n        <h4>Consuming REST API (apollo-link-rest) & Modifying cache with query overwriting</h4>\n        <form\n          onSubmit={handleSubmit}\n        >\n          <input type=\"text\" placeholder=\"Enter UUID\" name=\"uuid\" />\n          {' '}\n          <button type=\"submit\">Add new user</button>\n        </form>\n        {data && data.users.results.map(({login, name}) => (\n          <div key={login.uuid}>\n            {`${name.title} ${name.first} ${name.last} (${login.uuid})`}\n          </div>\n        ))}\n      </Loader>\n    </Fragment>\n  );\n};\n\nexport default RestAPI;\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"CountryByContinentQuery\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"code\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"continent\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"code\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"code\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"code\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"countries\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"FragmentSpread\",\"name\":{\"kind\":\"Name\",\"value\":\"Country\"},\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":261}};\n    doc.loc.source = {\"body\":\"#import \\\"./fragments/country.gql\\\"\\n\\nquery CountryByContinentQuery ($code: ID!) {\\n  continent(code: $code) {\\n    code\\n    name\\n    countries {\\n      # GraphQL Framgents\\n      # https://www.apollographql.com/docs/react/data/fragments/\\n      ...Country\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  doc.definitions = doc.definitions.concat(unique(require(\"./fragments/country.gql\").definitions));\n\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"CountryByContinentQuery\"] = oneQuery(doc, \"CountryByContinentQuery\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"FragmentDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Country\"},\"typeCondition\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Country\"}},\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"code\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"emoji\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"capital\"},\"arguments\":[],\"directives\":[]}]}}],\"loc\":{\"start\":0,\"end\":57}};\n    doc.loc.source = {\"body\":\"fragment Country on Country {\\n  code\\n  emoji\\n  capital\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"Country\"] = oneQuery(doc, \"Country\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"UsersQuery\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"users\"},\"arguments\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"rest\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"Users\",\"block\":false}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"path\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"?nat=gb&results=5\",\"block\":false}}]}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"results\"},\"arguments\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"User\",\"block\":false}}]}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"Name\",\"block\":false}}]}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"first\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"last\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"login\"},\"arguments\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"Login\",\"block\":false}}]}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"uuid\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"picture\"},\"arguments\":[],\"directives\":[{\"kind\":\"Directive\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"Picture\",\"block\":false}}]}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"thumbnail\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":326}};\n    doc.loc.source = {\"body\":\"query UsersQuery {\\n  users @rest(type: \\\"Users\\\", path: \\\"?nat=gb&results=5\\\") {\\n    results @type(name: \\\"User\\\") {\\n      name @type(name: \\\"Name\\\") {\\n        title\\n        first\\n        last\\n      }\\n      login @type(name: \\\"Login\\\") {\\n        uuid\\n      }\\n      picture @type(name: \\\"Picture\\\") {\\n        thumbnail\\n      }\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"UsersQuery\"] = oneQuery(doc, \"UsersQuery\");\n        \n","/* global document */\n\nimport React from 'react';\nimport {render} from 'react-dom';\nimport App from './containers/App';\n\n/**\n * Maybe, if someone add SSR to this app we can\n * add 'hydration' of DOM and other 'initialization' stuff\n */\nrender(<App />, document.getElementById('app'));\n","import {darken, transparentize} from 'polished';\n\n/**\n * This module holds essential theme colors to create\n * unique branding style for my application.\n *\n * If we need, we can create multi-theme application and switch\n * theme dynamically without any server bulding. Just using JSS and React\n */\nconst base = {\n  brand: '#ff5959',\n  light: '#fff',\n  dark: '#000',\n};\n\nexport default {\n  brand: base.brand,\n  success: '#69b32d',\n  danger: '#f1462f',\n  typography: {\n    fontFamily: 'Helvetica, Arial, sans-serif',\n    fontSize: 14,\n    lineHeight: 1.2,\n  },\n  common: {\n    card: darken(0.04, base.light),\n    widget: base.light,\n    border: darken(0.1, base.light),\n    radius: 3,\n  },\n  icon: {\n    default: transparentize(0.5, base.dark),\n    inverse: transparentize(0.1, base.light),\n  },\n  loader: {\n    foreground: transparentize(0.4, base.dark),\n    background: transparentize(0.8, base.dark),\n  },\n  text: {\n    default: transparentize(0.15, base.dark),\n    highlight: base.brand,\n    muted: transparentize(0.5, base.dark),\n  },\n  shadow: {\n    level1: '0 0 2px 0 rgba(0,0,0,0.10), 0 2px 2px 0 rgba(0,0,0,0.20)',\n    level2: '0 0 4px 0 rgba(0,0,0,0.10), 0 4px 4px 0 rgba(0,0,0,0.20)',\n    level3: '0 0 8px 0 rgba(0,0,0,0.10), 0 8px 8px 0 rgba(0,0,0,0.20)',\n    level4: '0 0 16px 0 rgba(0,0,0,0.10), 0 16px 16px 0 rgba(0,0,0,0.20)',\n    level5: '0 0 24px 0 rgba(0,0,0,0.10), 0 24px 24px 0 rgba(0,0,0,0.20)',\n  },\n  button: {\n    color: transparentize(0.3, base.dark),\n    background: darken(0.08, base.light),\n    hoverBackground: darken(0.12, base.light),\n    icon: transparentize(0.5, base.dark),\n  },\n};\n","import normalize from 'normalize-jss';\nimport injectSheet from 'react-jss';\n\n/**\n * React-wrapper around plain JSS normalizing styles.\n * For info - 'normalize-jss' was created by me.\n */\nexport default injectSheet(normalize)();\n","/* (ignored) */"],"sourceRoot":""}